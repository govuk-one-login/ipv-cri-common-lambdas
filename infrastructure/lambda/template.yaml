AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: "Digital Identity IPV CRI common API"

Parameters:
  CodeSigningConfigArn:
    Type: String
    Default: "none"
    Description: >
      The ARN of the Code Signing Config to use, provided by the deployment pipeline
  Environment:
    Description: "The environment type"
    Type: "String"
    AllowedValues:
      - "dev"
      - "build"
      - "staging"
      - "integration"
      - "production"
    ConstraintDescription: must be dev, build, staging, integration or production
  PermissionsBoundary:
    Description: "The ARN of the permissions boundary to apply when creating IAM roles"
    Type: String
    Default: "none"
  AuditEventNamePrefix:
    Description: "The audit event name prefix"
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/common-cri-parameters/AuditEventNamePrefix"
  CriIdentifier:
    Description: "The unique credential issuer identifier"
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/common-cri-parameters/CriIdentifier"

Conditions:
  UseCodeSigningConfigArn:
    Fn::Not:
      - Fn::Equals:
          - !Ref CodeSigningConfigArn
          - "none"
  IsStubEnvironment: !Or
    - !Equals [ !Ref Environment, dev]
    - !Equals [ !Ref Environment, build ]
    - !Equals [ !Ref Environment, staging ]
    - !Equals [ !Ref Environment, integration ]
  IsProdLikeEnvironment: !Or
    - !Equals [ !Ref Environment, staging ]
    - !Equals [ !Ref Environment, integration ]
    - !Equals [ !Ref Environment, production ]
  IsProdEnvironment: !Equals
    - !Ref Environment
    - production
  IsDevEnvironment: !Equals
    - !Ref Environment
    - dev
  IsNotDevEnvironment: !Not
    - Condition: IsDevEnvironment
  IsDevPlatformDeploy: !Equals
    - !FindInMap [ CriVpcMapping, !Ref CriIdentifier, !Ref Environment ]
    - "di-devplatform-deploy"
  UsePermissionsBoundary:
    Fn::Not:
      - Fn::Equals:
          - !Ref PermissionsBoundary
          - "none"
Globals:
  Function:
    VpcConfig:
      SecurityGroupIds: !If
        - IsDevPlatformDeploy
        - [ !ImportValue cri-vpc-AWSServicesEndpointSecurityGroupId ]
        - [ !ImportValue cri-vpc-LambdaSecurityGroup ]
      SubnetIds: !If
        - IsDevPlatformDeploy
        - [ !ImportValue cri-vpc-PrivateSubnetIdA, !ImportValue cri-vpc-PrivateSubnetIdB, !ImportValue cri-vpc-PrivateSubnetIdC ]
        - !Split [ ",", !ImportValue cri-vpc-PrivateSubnets ]
    PermissionsBoundary: !If
      - UsePermissionsBoundary
      - !Ref PermissionsBoundary
      - !Ref AWS::NoValue
    CodeSigningConfigArn: !If
      - UseCodeSigningConfigArn
      - !Ref CodeSigningConfigArn
      - !Ref AWS::NoValue
    Timeout: 30 # seconds
    Runtime: java11
    AutoPublishAlias: live
    Tracing: Active
    MemorySize: !FindInMap [MemorySizeMapping, Environment, !Ref 'Environment']
    Architectures:
      - arm64
    Environment:
      Variables:
        JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
        AWS_STACK_NAME: !Sub ${AWS::StackName}
        POWERTOOLS_LOG_LEVEL: INFO
        POWERTOOLS_METRICS_NAMESPACE: !Ref CriIdentifier
        SQS_AUDIT_EVENT_PREFIX: !Ref AuditEventNamePrefix

Mappings:
  MemorySizeMapping:
    Environment:
      dev: 512
      build: 1024
      staging: 1024
      integration: 1024
      production: 2048

  SessionTtlMapping:
    Environment:
      dev: 7200 # 2 hours
      build: 7200 # 2 hours
      staging: 7200 # 2 hours
      integration: 7200 # 2 hours
      production: 7200 # 2 hours

  CriVpcMapping:
    di-ipv-cri-address-api:
      dev: "di-ipv-cri-pipeline-deployment"
      build: "di-ipv-cri-pipeline-deployment"
      staging: "di-ipv-cri-pipeline-deployment"
      integration: "di-ipv-cri-pipeline-deployment"
      production: "di-ipv-cri-pipeline-deployment"
    di-ipv-cri-fraud-api:
      dev: "di-ipv-cri-pipeline-deployment"
      build: "di-ipv-cri-pipeline-deployment"
      staging: "di-ipv-cri-pipeline-deployment"
      integration: "di-ipv-cri-pipeline-deployment"
      production: "di-ipv-cri-pipeline-deployment"
    di-ipv-cri-kbv-api:
      dev: "di-ipv-cri-pipeline-deployment"
      build: "di-ipv-cri-pipeline-deployment"
      staging: "di-ipv-cri-pipeline-deployment"
      integration: "di-ipv-cri-pipeline-deployment"
      production: "di-ipv-cri-pipeline-deployment"
    di-ipv-cri-dl-api:
      dev: "di-ipv-cri-pipeline-deployment"
      build: "di-ipv-cri-pipeline-deployment"
      staging: "di-ipv-cri-pipeline-deployment"
      integration: "di-ipv-cri-pipeline-deployment"
      production: "di-ipv-cri-pipeline-deployment"
    di-ipv-cri-passport-api:
      dev: "di-ipv-cri-pipeline-deployment" # cri-dev
      build: "di-devplatform-deploy"
      staging: "di-devplatform-deploy"
      integration: "di-devplatform-deploy"

  CriAudienceMapping:
    di-ipv-cri-address-api:
      dev: "https://review-a.dev.account.gov.uk"
      build: "https://review-a.build.account.gov.uk"
      staging: "https://review-a.staging.account.gov.uk"
      integration: "https://review-a.integration.account.gov.uk"
      production: "https://review-a.account.gov.uk"
    di-ipv-cri-fraud-api:
      dev: "https://review-f.dev.account.gov.uk"
      build: "https://review-f.build.account.gov.uk"
      staging: "https://review-f.staging.account.gov.uk"
      integration: "https://review-f.integration.account.gov.uk"
      production: "https://review-f.account.gov.uk"
    di-ipv-cri-kbv-api:
      dev: "https://review-k.dev.account.gov.uk"
      build: "https://review-k.build.account.gov.uk"
      staging: "https://review-k.staging.account.gov.uk"
      integration: "https://review-k.integration.account.gov.uk"
      production: "https://review-k.account.gov.uk"
    di-ipv-cri-dl-api:
      dev: "https://review-d.dev.account.gov.uk"
      build: "https://review-d.build.account.gov.uk"
      staging: "https://review-d.staging.account.gov.uk"
      integration: "https://review-d.integration.account.gov.uk"
      production: "https://review-d.account.gov.uk"
    di-ipv-cri-passport-api:
      dev: "https://review-pa.dev.account.gov.uk"
      build: "https://review-pa.build.account.gov.uk"
      staging: "https://review-pa.staging.account.gov.uk"
      integration: "https://review-pa.integration.account.gov.uk"
      production: "https://review-pa.account.gov.uk"

  IPVCoreStubAwsBuildIssuerMapping:
    Environment:
      dev: "https://cri.core.build.stubs.account.gov.uk"
      build: "https://cri.core.build.stubs.account.gov.uk"
      staging: "https://cri.core.build.stubs.account.gov.uk"
      integration: "https://cri.core.build.stubs.account.gov.uk"

  IPVCoreStubIssuerMapping:
    Environment:
      dev: "https://di-ipv-core-stub.london.cloudapps.digital"
      build: "https://di-ipv-core-stub.london.cloudapps.digital"
      staging: "https://di-ipv-core-stub.london.cloudapps.digital"
      integration: "https://di-ipv-core-stub.london.cloudapps.digital"

  IPVCoreStubPreProdAwsBuildIssuerMapping:
    Environment:
      production: "https://cri-preprod.core.build.stubs.account.gov.uk"

  IPVCoreStubPreProdIssuerMapping:
    Environment:
      production: "https://di-ipv-core-stub.london.cloudapps.digital"

  IPVCore1IssuerMapping:
    Environment:
      staging: "https://identity.staging.account.gov.uk"
      integration: "https://identity.integration.account.gov.uk"
      production: "https://identity.account.gov.uk"

  IPVCoreStubAwsBuildPublicSigningJwkBase64Mapping:
    Environment:
      dev: "ewogICAgImt0eSI6ICJFQyIsCiAgICAidXNlIjogInNpZyIsCiAgICAiY3J2IjogIlAtMjU2IiwKICAgICJraWQiOiAiaXB2LWNvcmUtc3R1Yi0yLWZyb20tbWtqd2sub3JnIiwKICAgICJ4IjogImszOXVLYWNTdWtRQnJNWnJIRFRCVVpzbGl2cFhLRE5aVGc2aW5DSHdyTGMiLAogICAgInkiOiAiOEY4TG5RN3dHOWh4c1Q0YXgwQXR5N2lNR0l5aVlfWUdwM19xSVp6S28xQSIsCiAgICAiYWxnIjogIkVTMjU2Igp9"
      build: "ewogICAgImt0eSI6ICJFQyIsCiAgICAidXNlIjogInNpZyIsCiAgICAiY3J2IjogIlAtMjU2IiwKICAgICJraWQiOiAiaXB2LWNvcmUtc3R1Yi0yLWZyb20tbWtqd2sub3JnIiwKICAgICJ4IjogImszOXVLYWNTdWtRQnJNWnJIRFRCVVpzbGl2cFhLRE5aVGc2aW5DSHdyTGMiLAogICAgInkiOiAiOEY4TG5RN3dHOWh4c1Q0YXgwQXR5N2lNR0l5aVlfWUdwM19xSVp6S28xQSIsCiAgICAiYWxnIjogIkVTMjU2Igp9"
      staging: "ewogICAgImt0eSI6ICJFQyIsCiAgICAidXNlIjogInNpZyIsCiAgICAiY3J2IjogIlAtMjU2IiwKICAgICJraWQiOiAiaXB2LWNvcmUtc3R1Yi0yLWZyb20tbWtqd2sub3JnIiwKICAgICJ4IjogImszOXVLYWNTdWtRQnJNWnJIRFRCVVpzbGl2cFhLRE5aVGc2aW5DSHdyTGMiLAogICAgInkiOiAiOEY4TG5RN3dHOWh4c1Q0YXgwQXR5N2lNR0l5aVlfWUdwM19xSVp6S28xQSIsCiAgICAiYWxnIjogIkVTMjU2Igp9"
      integration: "ewogICAgImt0eSI6ICJFQyIsCiAgICAidXNlIjogInNpZyIsCiAgICAiY3J2IjogIlAtMjU2IiwKICAgICJraWQiOiAiaXB2LWNvcmUtc3R1Yi0yLWZyb20tbWtqd2sub3JnIiwKICAgICJ4IjogImszOXVLYWNTdWtRQnJNWnJIRFRCVVpzbGl2cFhLRE5aVGc2aW5DSHdyTGMiLAogICAgInkiOiAiOEY4TG5RN3dHOWh4c1Q0YXgwQXR5N2lNR0l5aVlfWUdwM19xSVp6S28xQSIsCiAgICAiYWxnIjogIkVTMjU2Igp9"

  IPVCoreStubPublicSigningJwkBase64Mapping:
    Environment:
      dev: "ewogICAgImt0eSI6ICJFQyIsCiAgICAidXNlIjogInNpZyIsCiAgICAiY3J2IjogIlAtMjU2IiwKICAgICJraWQiOiAiaXB2LWNvcmUtc3R1Yi0yLWZyb20tbWtqd2sub3JnIiwKICAgICJ4IjogImszOXVLYWNTdWtRQnJNWnJIRFRCVVpzbGl2cFhLRE5aVGc2aW5DSHdyTGMiLAogICAgInkiOiAiOEY4TG5RN3dHOWh4c1Q0YXgwQXR5N2lNR0l5aVlfWUdwM19xSVp6S28xQSIsCiAgICAiYWxnIjogIkVTMjU2Igp9"
      build: "ewogICAgImt0eSI6ICJFQyIsCiAgICAidXNlIjogInNpZyIsCiAgICAiY3J2IjogIlAtMjU2IiwKICAgICJraWQiOiAiaXB2LWNvcmUtc3R1Yi0yLWZyb20tbWtqd2sub3JnIiwKICAgICJ4IjogImszOXVLYWNTdWtRQnJNWnJIRFRCVVpzbGl2cFhLRE5aVGc2aW5DSHdyTGMiLAogICAgInkiOiAiOEY4TG5RN3dHOWh4c1Q0YXgwQXR5N2lNR0l5aVlfWUdwM19xSVp6S28xQSIsCiAgICAiYWxnIjogIkVTMjU2Igp9"
      staging: "ewogICAgImt0eSI6ICJFQyIsCiAgICAidXNlIjogInNpZyIsCiAgICAiY3J2IjogIlAtMjU2IiwKICAgICJraWQiOiAiaXB2LWNvcmUtc3R1Yi0yLWZyb20tbWtqd2sub3JnIiwKICAgICJ4IjogImszOXVLYWNTdWtRQnJNWnJIRFRCVVpzbGl2cFhLRE5aVGc2aW5DSHdyTGMiLAogICAgInkiOiAiOEY4TG5RN3dHOWh4c1Q0YXgwQXR5N2lNR0l5aVlfWUdwM19xSVp6S28xQSIsCiAgICAiYWxnIjogIkVTMjU2Igp9"
      integration: "ewogICAgImt0eSI6ICJFQyIsCiAgICAidXNlIjogInNpZyIsCiAgICAiY3J2IjogIlAtMjU2IiwKICAgICJraWQiOiAiaXB2LWNvcmUtc3R1Yi0yLWZyb20tbWtqd2sub3JnIiwKICAgICJ4IjogImszOXVLYWNTdWtRQnJNWnJIRFRCVVpzbGl2cFhLRE5aVGc2aW5DSHdyTGMiLAogICAgInkiOiAiOEY4TG5RN3dHOWh4c1Q0YXgwQXR5N2lNR0l5aVlfWUdwM19xSVp6S28xQSIsCiAgICAiYWxnIjogIkVTMjU2Igp9"

  IPVCoreStubPreProdAwsBuildPublicSigningJwkBase64Mapping:
    Environment:
      production: "ewogICAgImt0eSI6ICJFQyIsCiAgICAidXNlIjogInNpZyIsCiAgICAiY3J2IjogIlAtMjU2IiwKICAgICJraWQiOiAiaXB2LWNvcmUtc3R1Yi0yLWZyb20tbWtqd2sub3JnIiwKICAgICJ4IjogImszOXVLYWNTdWtRQnJNWnJIRFRCVVpzbGl2cFhLRE5aVGc2aW5DSHdyTGMiLAogICAgInkiOiAiOEY4TG5RN3dHOWh4c1Q0YXgwQXR5N2lNR0l5aVlfWUdwM19xSVp6S28xQSIsCiAgICAiYWxnIjogIkVTMjU2Igp9"

  IPVCoreStubPreProdPublicSigningJwkBase64Mapping:
    Environment:
      production: "ewogICAgImt0eSI6ICJFQyIsCiAgICAidXNlIjogInNpZyIsCiAgICAiY3J2IjogIlAtMjU2IiwKICAgICJraWQiOiAiaXB2LWNvcmUtc3R1Yi0yLWZyb20tbWtqd2sub3JnIiwKICAgICJ4IjogImszOXVLYWNTdWtRQnJNWnJIRFRCVVpzbGl2cFhLRE5aVGc2aW5DSHdyTGMiLAogICAgInkiOiAiOEY4TG5RN3dHOWh4c1Q0YXgwQXR5N2lNR0l5aVlfWUdwM19xSVp6S28xQSIsCiAgICAiYWxnIjogIkVTMjU2Igp9"

  IPVCore1PublicSigningJwkBase64Mapping:
    Environment:
      staging: "eyJrdHkiOiJFQyIsImNydiI6IlAtMjU2IiwieCI6ImtlMVRNRnFNb0Z5eHg1eXpOdFFRbGw0dk9yeHZUdFBKQ0huUzRqOHpoMlUiLCJ5IjoicURLX0g4QXpKS2FIbU1zaHg5TGp2LTB0ek5rV2EtSkVHUzJtZHRKUjFPQSJ9"
      integration: "eyJrdHkiOiJFQyIsImNydiI6IlAtMjU2IiwieCI6IkJUUWdWQjU0RE9JcDU0eGRVSVg0SGtUX3pCdjZHdVdMV1RUTkdxMk15dEkiLCJ5IjoiTFFRamx5ZEtOMUhXZFJQcFBpalJObEJrbi1qaDgzZzBBUmIyNms2WVh1byJ9"
      production: "eyJrdHkiOiJFQyIsImNydiI6IlAtMjU2IiwieCI6IlVQdlU1TlBtRUxyV2lXU01WZkREN0c4dTNFSllyeXFQSVo0Nlc5TUFsUmMiLCJ5Ijoicjc3RjItS1BocHZUSUdFV2d0NVNtYXZTdkJVSENxV1V4RDZSR19GSkhWayJ9"

  IPVCoreStubAwsBuildRedirectURIMapping:
    Environment:
      dev: "https://cri.core.build.stubs.account.gov.uk/callback"
      build: "https://cri.core.build.stubs.account.gov.uk/callback"
      staging: "https://cri.core.build.stubs.account.gov.uk/callback"
      integration: "https://cri.core.build.stubs.account.gov.uk/callback"
  
  IPVCoreStubRedirectURIMapping:
    Environment:
      dev: "https://di-ipv-core-stub.london.cloudapps.digital/callback"
      build: "https://di-ipv-core-stub.london.cloudapps.digital/callback"
      staging: "https://di-ipv-core-stub.london.cloudapps.digital/callback"
      integration: "https://di-ipv-core-stub.london.cloudapps.digital/callback"

  IPVCoreStubPreProdAwsBuildRedirectURIMapping:
    Environment:
      production: "https://cri-preprod.core.build.stubs.account.gov.uk/callback"

  IPVCoreStubPreProdRedirectURIMapping:
    Environment:
      production: "https://di-ipv-core-stub-pre-prod.london.cloudapps.digital/callback"

  IPVCore1RedirectURIMapping:
    di-ipv-cri-address-api:
      staging: "https://identity.staging.account.gov.uk/credential-issuer/callback?id=address"
      integration: "https://identity.integration.account.gov.uk/credential-issuer/callback?id=address"
      production: "https://identity.account.gov.uk/credential-issuer/callback?id=address"
    di-ipv-cri-fraud-api:
      staging: "https://identity.staging.account.gov.uk/credential-issuer/callback?id=fraud"
      integration: "https://identity.integration.account.gov.uk/credential-issuer/callback?id=fraud"
      production: "https://identity.account.gov.uk/credential-issuer/callback?id=fraud"
    di-ipv-cri-kbv-api:
      staging: "https://identity.staging.account.gov.uk/credential-issuer/callback?id=kbv"
      integration: "https://identity.integration.account.gov.uk/credential-issuer/callback?id=kbv"
      production: "https://identity.account.gov.uk/credential-issuer/callback?id=kbv"
    di-ipv-cri-dl-api:
      staging: "https://identity.staging.account.gov.uk/credential-issuer/callback?id=drivingLicence"
      integration: "https://identity.integration.account.gov.uk/credential-issuer/callback?id=drivingLicence"
      production: "https://identity.account.gov.uk/credential-issuer/callback?id=drivingLicence"
    di-ipv-cri-passport-api:
      staging: "https://identity.staging.account.gov.uk/credential-issuer/callback?id=ukPassport"
      integration: "https://identity.integration.account.gov.uk/credential-issuer/callback?id=ukPassport"
      production: "https://identity.account.gov.uk/credential-issuer/callback?id=ukPassport"

  VerifiableCredentialIssuerMapping:
    di-ipv-cri-address-api:
      dev: "https://review-a.dev.account.gov.uk"
      build: "https://review-a.build.account.gov.uk"
      staging: "https://review-a.staging.account.gov.uk"
      integration: "https://review-a.integration.account.gov.uk"
      production: "https://review-a.account.gov.uk"
    di-ipv-cri-fraud-api:
      dev: "https://review-f.dev.account.gov.uk"
      build: "https://review-f.build.account.gov.uk"
      staging: "https://review-f.staging.account.gov.uk"
      integration: "https://review-f.integration.account.gov.uk"
      production: "https://review-f.account.gov.uk"
    di-ipv-cri-kbv-api:
      dev: "https://review-k.dev.account.gov.uk"
      build: "https://review-k.build.account.gov.uk"
      staging: "https://review-k.staging.account.gov.uk"
      integration: "https://review-k.integration.account.gov.uk"
      production: "https://review-k.account.gov.uk"
    di-ipv-cri-dl-api:
      dev: "https://review-d.dev.account.gov.uk"
      build: "https://review-d.build.account.gov.uk"
      staging: "https://review-d.staging.account.gov.uk"
      integration: "https://review-d.integration.account.gov.uk"
      production: "https://review-d.account.gov.uk"
    di-ipv-cri-passport-api:
      dev: "https://review-pa.dev.account.gov.uk"
      build: "https://review-pa.build.account.gov.uk"
      staging: "https://review-pa.staging.account.gov.uk"
      integration: "https://review-pa.integration.account.gov.uk"
      production: "https://review-pa.account.gov.uk"

Resources:
  SessionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../session
      FunctionName: !Sub "${AWS::StackName}-SessionFunction"
      Handler: uk.gov.di.ipv.cri.common.api.handler.SessionHandler::handleRequest
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub "${CriIdentifier}-session"
          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBWritePolicy:
            TableName: !Ref SessionTable
        - DynamoDBWritePolicy:
            TableName: !Ref PersonIdentityTable
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName
        - KMSDecryptPolicy:
            KeyId: !ImportValue core-infrastructure-CriDecryptionKey1Id
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameter
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/SessionTableName"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/SessionTtl"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/KBVCriAudience"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/AuthRequestKmsEncryptionKeyId"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/PersonIdentityTableName"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/verifiable-credential/issuer"
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParametersByPath
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/clients/*"
        - Statement:
            - Sid: auditEventQueueKmsEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !ImportValue AuditEventQueueEncryptionKeyArn

  SessionFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${SessionFunction}"
      RetentionInDays: 30

  SessionFunctionLogGroupSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevEnvironment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref SessionFunctionLogGroup

  SessionFunctionTS:
    Type: AWS::Serverless::Function
    Properties:
      Handler: session-handler.lambdaHandler
      Runtime: nodejs18.x
      CodeUri: ../../lambdas
      FunctionName: !Sub "${AWS::StackName}-SessionFunctionTS"
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub "${CriIdentifier}-sessionTS"
          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBWritePolicy:
            TableName: !Ref SessionTable
        - DynamoDBWritePolicy:
            TableName: !Ref PersonIdentityTable
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName
        - KMSDecryptPolicy:
            KeyId: !ImportValue core-infrastructure-CriDecryptionKey1Id
        - SSMParameterReadPolicy:
            ParameterName: !Sub "${AWS::StackName}/clients/*"
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameters
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/SessionTableName"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/SessionTtl"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/KBVCriAudience"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/AuthRequestKmsEncryptionKeyId"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/PersonIdentityTableName"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/verifiable-credential/issuer"
        - Statement:
            - Sid: auditEventQueueKmsEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !ImportValue AuditEventQueueEncryptionKeyArn
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "node18"
        Sourcemap: true # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
        EntryPoints:
          - src/handlers/session-handler.ts
        External:
          - '@aws-sdk/*'

  SessionFunctionTSLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${SessionFunctionTS}"
      RetentionInDays: 30

  SessionFunctionLogGroupSubscriptionFilterCSLSTS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevEnvironment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref SessionFunctionTSLogGroup

  AuthorizationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../authorization
      FunctionName: !Sub "${AWS::StackName}-AuthorizationFunction"
      Handler: uk.gov.di.ipv.cri.common.api.handler.AuthorizationHandler::handleRequest
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub "${CriIdentifier}-authorization"
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBReadPolicy:
            TableName: !Ref SessionTable
        - DynamoDBWritePolicy:
            TableName: !Ref SessionTable
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameter
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/SessionTableName"
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParametersByPath
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/clients/*"

  AuthorizationFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${AuthorizationFunction}"
      RetentionInDays: 30

  AuthorizationFunctionTS:
    Type: AWS::Serverless::Function
    Properties:
      Handler: authorization-handler.lambdaHandler
      CodeUri: ../../lambdas
      Runtime: nodejs18.x
      FunctionName: !Sub "${AWS::StackName}-AuthorizationFunctionTS"
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub "${CriIdentifier}-authorizationTS"
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBReadPolicy:
            TableName: !Ref SessionTable
        - DynamoDBWritePolicy:
            TableName: !Ref SessionTable
        - SSMParameterReadPolicy:
            ParameterName: !Sub "${AWS::StackName}/clients/*"
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameters
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/SessionTableName"
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "node18"
        Sourcemap: true # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
        EntryPoints:
          - src/handlers/authorization-handler.ts
        External:
          - '@aws-sdk/*'

  AuthorizationFunctionTSLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${AuthorizationFunctionTS}"
      RetentionInDays: 30

  AuthorizationFunctionLogGroupSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevEnvironment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref AuthorizationFunctionLogGroup

  AuthorizationFunctionLogGroupSubscriptionFilterCSLSTS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevEnvironment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref AuthorizationFunctionTSLogGroup

  AccessTokenFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../accesstoken
      FunctionName: !Sub "${AWS::StackName}-AccessTokenFunction"
      Handler: uk.gov.di.ipv.cri.common.api.handler.AccessTokenHandler::handleRequest
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub "${CriIdentifier}-access-token"
      Policies:
        - DynamoDBReadPolicy:
            TableName:
              Ref: SessionTable
        - DynamoDBWritePolicy:
            TableName:
              Ref: SessionTable
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameter
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/SessionTableName"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/SessionTtl"
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParametersByPath
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/clients/*"

  AccessTokenFunctionTS:
    Type: AWS::Serverless::Function
    Properties:
      Handler: access-token-handler.lambdaHandler
      CodeUri: ../../lambdas
      Runtime: nodejs18.x
      FunctionName: !Sub "${AWS::StackName}-AccessTokenFunctionTS"
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub "${CriIdentifier}-access-token-2"
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBReadPolicy:
            TableName:
              Ref: SessionTable
        - DynamoDBWritePolicy:
            TableName:
              Ref: SessionTable
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameters
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/SessionTableName"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/SessionTtl"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/clients/*"
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "node18"
        Sourcemap: true # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
        EntryPoints:
          - src/handlers/access-token-handler.ts
        External:
          - '@aws-sdk/*'

  AccessTokenTSFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${AccessTokenFunctionTS}"
      RetentionInDays: 30

  AccessTokenTSPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt AccessTokenFunctionTS.Arn
      Principal: apigateway.amazonaws.com

  AccessTokenFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${AccessTokenFunction}"
      RetentionInDays: 30

  AccessTokenFunctionLogGroupSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevEnvironment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref AccessTokenFunctionLogGroup

  AccessTokenFunctionLogGroupSubscriptionFilterCSLSTS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevEnvironment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref AccessTokenTSFunctionLogGroup

  SessionTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: !Sub "session-${AWS::StackName}"
      BillingMode: "PAY_PER_REQUEST"
      AttributeDefinitions:
        - AttributeName: "sessionId"
          AttributeType: "S"
        - AttributeName: "authorizationCode"
          AttributeType: "S"
        - AttributeName: "accessToken"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "sessionId"
          KeyType: "HASH"
      GlobalSecondaryIndexes:
        - IndexName: "authorizationCode-index"
          KeySchema:
            - AttributeName: "authorizationCode"
              KeyType: "HASH"
          Projection:
            NonKeyAttributes:
              - "sessionId"
              - "redirectUri"
              - "clientId"
            ProjectionType: "INCLUDE"
        - IndexName: "access-token-index"
          KeySchema:
            - AttributeName: "accessToken"
              KeyType: "HASH"
          Projection:
            NonKeyAttributes:
              - "sessionId"
              - "subject"
            ProjectionType: "INCLUDE"
      TimeToLiveSpecification:
        AttributeName: expiryDate
        Enabled: true

  PersonIdentityTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: !Sub "person-identity-${AWS::StackName}"
      BillingMode: "PAY_PER_REQUEST"
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      AttributeDefinitions:
        - AttributeName: "sessionId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "sessionId"
          KeyType: "HASH"
      TimeToLiveSpecification:
        AttributeName: expiryDate
        Enabled: true

  ParameterSessionTableName:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/SessionTableName"
      Value: !Sub session-${AWS::StackName}
      Type: String
      Description: session dynamodb table name

  ParameterPersonIdentityTableName:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/PersonIdentityTableName"
      Value: !Sub person-identity-${AWS::StackName}
      Type: String
      Description: person identity dynamodb table name

  SessionTtlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/SessionTtl"
      Type: String
      Value: !FindInMap [ SessionTtlMapping, Environment, !Ref 'Environment' ]
      Description: default time to live for a session item (seconds)

  IPVCoreStubAwsBuildAuthenticationAlgParameter:
    Condition: IsStubEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub-aws-build/jwtAuthentication/authenticationAlg"
      Type: String
      Value: ES256

  IPVCoreStubAuthenticationAlgParameter:
    Condition: IsStubEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub/jwtAuthentication/authenticationAlg"
      Type: String
      Value: ES256

  IPVCoreStubPreProdAwsBuildAuthenticationAlgParameter:
    Condition: IsProdLikeEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub-pre-prod-aws-build/jwtAuthentication/authenticationAlg"
      Type: String
      Value: ES256

  IPVCoreStubPreProdAuthenticationAlgParameter:
    Condition: IsProdLikeEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub-pre-prod/jwtAuthentication/authenticationAlg"
      Type: String
      Value: ES256

  IPVCore1AuthenticationAlgParameter:
    Condition: IsProdLikeEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core/jwtAuthentication/authenticationAlg"
      Type: String
      Value: ES256
  
  IPVCoreStubAwsBuildAudienceParameter:
    Condition: IsStubEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub-aws-build/jwtAuthentication/audience"
      Type: String
      Value: !FindInMap [ CriAudienceMapping, !Ref CriIdentifier, !Ref Environment ]

  IPVCoreStubAudienceParameter:
    Condition: IsStubEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub/jwtAuthentication/audience"
      Type: String
      Value: !FindInMap [ CriAudienceMapping, !Ref CriIdentifier, !Ref Environment ]

  IPVCoreStubPreProdAwsBuildAudienceParameter:
    Condition: IsProdEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub-pre-prod-aws-build/jwtAuthentication/audience"
      Type: String
      Value: !FindInMap [ CriAudienceMapping, !Ref CriIdentifier, !Ref Environment ]

  IPVCoreStubPreProdAudienceParameter:
    Condition: IsProdEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub-pre-prod/jwtAuthentication/audience"
      Type: String
      Value: !FindInMap [ CriAudienceMapping, !Ref CriIdentifier, !Ref Environment ]

  IPVCore1AudienceParameter:
    Condition: IsProdLikeEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core/jwtAuthentication/audience"
      Type: String
      Value: !FindInMap [ CriAudienceMapping, !Ref CriIdentifier, !Ref Environment ]

  IPVCoreStubAwsBuildIssuerParameter:
    Condition: IsStubEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub-aws-build/jwtAuthentication/issuer"
      Type: String
      Value: !FindInMap [IPVCoreStubAwsBuildIssuerMapping, Environment, !Ref 'Environment']

  IPVCoreStubIssuerParameter:
    Condition: IsStubEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub/jwtAuthentication/issuer"
      Type: String
      Value: !FindInMap [IPVCoreStubIssuerMapping, Environment, !Ref 'Environment']

  IPVCoreStubPreProdAwsBuildIssuerParameter:
    Condition: IsProdEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub-pre-prod-aws-build/jwtAuthentication/issuer"
      Type: String
      Value: !FindInMap [IPVCoreStubPreProdAwsBuildIssuerMapping, Environment, !Ref 'Environment']

  IPVCoreStubPreProdIssuerParameter:
    Condition: IsProdEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub-pre-prod/jwtAuthentication/issuer"
      Type: String
      Value: !FindInMap [IPVCoreStubPreProdIssuerMapping, Environment, !Ref 'Environment']

  IPVCore1IssuerParameter:
    Condition: IsProdLikeEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core/jwtAuthentication/issuer"
      Type: String
      Value: !FindInMap [IPVCore1IssuerMapping, Environment, !Ref 'Environment']

  IPVCoreStubAwsBuildPublicSigningJwkBase64Parameter:
    Condition: IsStubEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub-aws-build/jwtAuthentication/publicSigningJwkBase64"
      Type: String
      Value: !FindInMap [IPVCoreStubAwsBuildPublicSigningJwkBase64Mapping, Environment, !Ref 'Environment']

  IPVCoreStubPublicSigningJwkBase64Parameter:
    Condition: IsStubEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub/jwtAuthentication/publicSigningJwkBase64"
      Type: String
      Value: !FindInMap [IPVCoreStubPublicSigningJwkBase64Mapping, Environment, !Ref 'Environment']

  IPVCoreStubPreProdAwsBuildPublicSigningJwkBase64Parameter:
    Condition: IsProdEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub-pre-prod-aws-build/jwtAuthentication/publicSigningJwkBase64"
      Type: String
      Value: !FindInMap [IPVCoreStubPreProdAwsBuildPublicSigningJwkBase64Mapping, Environment, !Ref 'Environment']

  IPVCoreStubPreProdPublicSigningJwkBase64Parameter:
    Condition: IsProdEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub-pre-prod/jwtAuthentication/publicSigningJwkBase64"
      Type: String
      Value: !FindInMap [IPVCoreStubPreProdPublicSigningJwkBase64Mapping, Environment, !Ref 'Environment']

  IPVCore1PublicSigningJwkBase64Parameter:
    Condition: IsProdLikeEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core/jwtAuthentication/publicSigningJwkBase64"
      Type: String
      Value: !FindInMap [IPVCore1PublicSigningJwkBase64Mapping, Environment, !Ref 'Environment']

  IPVCoreStubAwsBuildRedirectURIParameter:
    Condition: IsStubEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub-aws-build/jwtAuthentication/redirectUri"
      Type: String
      Value: !FindInMap [IPVCoreStubAwsBuildRedirectURIMapping, Environment, !Ref 'Environment']

  IPVCoreStubRedirectURIParameter:
    Condition: IsStubEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub/jwtAuthentication/redirectUri"
      Type: String
      Value: !FindInMap [IPVCoreStubRedirectURIMapping, Environment, !Ref 'Environment']

  IPVCoreStubPreProdAwsBuildRedirectURIParameter:
    Condition: IsProdEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub-pre-prod-aws-build/jwtAuthentication/redirectUri"
      Type: String
      Value: !FindInMap [IPVCoreStubPreProdAwsBuildRedirectURIMapping, Environment, !Ref 'Environment']

  IPVCoreStubPreProdRedirectURIParameter:
    Condition: IsProdEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub-pre-prod/jwtAuthentication/redirectUri"
      Type: String
      Value: !FindInMap [IPVCoreStubPreProdRedirectURIMapping, Environment, !Ref 'Environment']

  IPVCore1RedirectURIParameter:
    Condition: IsProdLikeEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core/jwtAuthentication/redirectUri"
      Type: String
      Value: !FindInMap [IPVCore1RedirectURIMapping, !Ref CriIdentifier, !Ref Environment]

  AuthRequestKmsEncryptionKeyIdParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/AuthRequestKmsEncryptionKeyId"
      Type: String
      Value: !ImportValue core-infrastructure-CriDecryptionKey1Id
      Description: The (KMS) encryption key identifier for decrypting authorisation requests

  VerifiableCredentialIssuerParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/verifiable-credential/issuer"
      Type: String
      Value: !FindInMap [VerifiableCredentialIssuerMapping, !Ref CriIdentifier, !Ref Environment]
      Description: Issuer of the Verifiable Credential

  VerifiableCredentialKmsSigningKeyParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/verifiableCredentialKmsSigningKeyId"
      Type: String
      Value: !ImportValue core-infrastructure-CriVcSigningKey1Id
      Description: Verifiable Credential Key Id

  SessionFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt SessionFunction.Arn
      Principal: apigateway.amazonaws.com

  SessionFunctionTSPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt SessionFunctionTS.Arn
      Principal: apigateway.amazonaws.com

  AccessTokenFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt AccessTokenFunction.Arn
      Principal: apigateway.amazonaws.com

  AuthorizationFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt AuthorizationFunction.Arn
      Principal: apigateway.amazonaws.com

  AuthorizationFunctionTSPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt AuthorizationFunctionTS.Arn
      Principal: apigateway.amazonaws.com

  LoggingKmsKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: !Sub "logs.${AWS::Region}.amazonaws.com"
            Action:
              - "kms:Encrypt*"
              - "kms:Decrypt*"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:Describe*"
            Resource: "*"
            Condition:
              ArnLike:
                "kms:EncryptionContext:aws:logs:arn": !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"

  CreateAuthCodeFunction:
    Type: AWS::Serverless::Function
    Condition: IsDevEnvironment
    Properties:
      Handler: create-auth-code-handler.lambdaHandler
      CodeUri: ../../lambdas
      Runtime: nodejs18.x
      FunctionName: !Sub "${AWS::StackName}-CreateAuthCodeFunction"
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub "${CriIdentifier}-create-auth-code"
      Policies:
        - DynamoDBWritePolicy:
            TableName:
              Ref: SessionTable
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameters
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/SessionTableName"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/clients/*"
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "node18"
        Sourcemap: true # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
        EntryPoints:
          - src/handlers/create-auth-code-handler.ts
        External:
          - '@aws-sdk/*'

  CreateAuthCodeFunctionPermission:
    Type: AWS::Lambda::Permission
    Condition: IsDevEnvironment
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt CreateAuthCodeFunction.Arn
      Principal: apigateway.amazonaws.com

  PreMergeDevOnlyApi:
    Type: AWS::Serverless::Api
    Condition: IsDevEnvironment
    Properties:
      Description: CRI API Gateway for pre-merge testing in dev only
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: '/*'
          HttpMethod: '*'
          ThrottlingRateLimit: 5
          ThrottlingBurstLimit: 10
      AccessLogSetting:
        DestinationArn: !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${PreMergeDevOnlyApiAccessLogGroup}'
        Format: >-
          {
          "requestId":"$context.requestId",
          "ip":"$context.identity.sourceIp",
          "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod",
          "path":"$context.path",
          "routeKey":"$context.routeKey",
          "status":"$context.status",
          "protocol":"$context.protocol",
          "responseLatency":"$context.responseLatency",
          "responseLength":"$context.responseLength"
          }
      Name: !Sub "common-lambdas-${AWS::StackName}"
      StageName: !Ref Environment
      DefinitionBody:
        openapi: "3.0.1" # workaround to get `sam validate` to work
        paths: # workaround to get `sam validate` to work
          /never-created:
            options: { } # workaround to get `sam validate` to work
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: './pre-merge-api.yaml'
      OpenApiVersion: 3.0.1
      EndpointConfiguration:
        Type: REGIONAL

  PreMergeDevOnlyApiAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Condition: IsDevEnvironment
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-${PreMergeDevOnlyApi}-private-AccessLogs
      RetentionInDays: 7

Outputs:
  StackName:
    Description: "CloudFormation stack name"
    Value: !Sub "${AWS::StackName}"
  PreMergeDevOnlyApiId:
    Condition: IsDevEnvironment
    Description: "API GatewayID of the dev-only common lambdas API"
    Value: !Sub "${PreMergeDevOnlyApi}"
