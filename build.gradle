plugins {
	id "java"
	id "org.sonarqube" version "4.4.+"
	id "com.diffplug.spotless" version "6.23.+"
}

java {
	sourceCompatibility = JavaVersion.VERSION_11
	targetCompatibility = JavaVersion.VERSION_11
}

ext {
	dependencyVersions = [
		aws_sdk_version          : "2.26.16",
		aws_lambda_events_version: "3.11.6",
		aws_powertools_version   : "1.18.0",
		jackson_version          : "2.15.2",
		nimbusds_oauth_version   : "11.17",
		nimbusds_jwt_version     : "9.36",
		protobuf_version         : "3.19.4",
		junit                    : "5.10.1",
		mockito                  : "4.3.1",
		glassfish_version        : "3.0.3",
		cri_common_lib           : "3.0.1"
	]
}

repositories {
	maven {
		url 'https://gds.jfrog.io/artifactory/di-allowed-repos'
	}
}

spotless {
	java {
		target "**/src/**/*.java"
		googleJavaFormat("1.13.0").aosp()
		importOrder "", "javax", "java", "\\#"
		endWithNewline()
	}
	groovyGradle {
		target '**/*.gradle'
		greclipse()
		trimTrailingWhitespace()
		endWithNewline()
	}
}

sonar {
	properties {
		property "sonar.projectName", "ipv-cri-common-lambdas-java"
		property "sonar.projectKey", "ipv-cri-common-lambdas-java"
		property "sonar.organization", "govuk-one-login"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}

subprojects {
	apply plugin: 'java'

	java {
		sourceCompatibility = JavaVersion.VERSION_11
		targetCompatibility = JavaVersion.VERSION_11
	}

	repositories {
		maven {
			url 'https://gds.jfrog.io/artifactory/di-allowed-repos'
		}
	}

	configurations {
		aws
		aws_crt_client
		dynamodb
		cache
		jackson
		tests
		test_runtime
		logging_runtime
		lambda
		sqs
		powertools
		nimbus
		kms
		mockito
		lambda_tests
		lettuce
		ssm
		cucumberRuntime
		cri_common_lib
		pact_tests
	}

	configurations.all {
		// https://aws.amazon.com/blogs/developer/tuning-the-aws-java-sdk-2-x-to-reduce-startup-time/
		exclude group:"software.amazon.awssdk", module: "apache-client"
		exclude group:"software.amazon.awssdk", module: "netty-nio-client"
	}

	dependencies {
		aws platform("software.amazon.awssdk:bom:${dependencyVersions.aws_sdk_version}")
		aws_crt_client "software.amazon.awssdk:aws-crt-client:${dependencyVersions.aws_sdk_version}"

		cri_common_lib "uk.gov.account:cri-common-lib:${dependencyVersions.cri_common_lib}"

		dynamodb "software.amazon.awssdk:dynamodb",
				"software.amazon.awssdk:dynamodb-enhanced"

		lambda "software.amazon.awssdk:lambda",
				"com.amazonaws:aws-lambda-java-events:${dependencyVersions.aws_lambda_events_version}"

		sqs "software.amazon.awssdk:sqs"

		kms "software.amazon.awssdk:kms"

		lambda_tests "software.amazon.awssdk:aws-lambda-java-tests:1.1.1"

		jackson "com.fasterxml.jackson.core:jackson-core",
				"com.fasterxml.jackson.core:jackson-databind",
				"com.fasterxml.jackson.core:jackson-annotations",
				"com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${dependencyVersions.jackson_version}",
				"com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${dependencyVersions.jackson_version}"

		powertools "software.amazon.lambda:powertools-logging:${dependencyVersions.aws_powertools_version}",
				"software.amazon.lambda:powertools-metrics:${dependencyVersions.aws_powertools_version}",
				"software.amazon.lambda:powertools-tracing:${dependencyVersions.aws_powertools_version}",
				"software.amazon.lambda:powertools-parameters:${dependencyVersions.aws_powertools_version}"

		tests "org.junit.jupiter:junit-jupiter-api:${dependencyVersions.junit}",
				"org.junit.jupiter:junit-jupiter-params:${dependencyVersions.junit}",
				"org.mockito:mockito-junit-jupiter:${dependencyVersions.mockito}",
				"org.mockito:mockito-inline:${dependencyVersions.mockito}",
				"org.hamcrest:hamcrest:2.2"

		pact_tests "au.com.dius.pact.provider:junit5:4.5.8",
				"au.com.dius.pact:provider:4.5.8",
				"software.amazon.awssdk:dynamodb:2.21.24"

		test_runtime "org.junit.jupiter:junit-jupiter-engine:${dependencyVersions.junit}"

		logging_runtime "com.amazonaws:aws-lambda-java-log4j2:1.5.1"

		lambda_tests "software.amazon.awssdk:aws-lambda-java-tests:1.1.1"

		nimbus "com.nimbusds:oauth2-oidc-sdk:${dependencyVersions.nimbusds_oauth_version}",
				"com.nimbusds:nimbus-jose-jwt:${dependencyVersions.nimbusds_jwt_version}"
	}

	apply plugin: 'java'

	test {
		// Configures environment variable to avoid initialization of AWS X-Ray segments for each tests
		environment "LAMBDA_TASK_ROOT", "handler"
		filter {
			excludeTestsMatching "uk.gov.di.ipv.cri.kbv.acceptancetest.journey.*"
		}
	}

	tasks.register("pactTests", Test) {
		useJUnitPlatform {
			includeTags 'Pact'
		}
	}
}

clean.doFirst {
	delete "${rootDir}/dist/"
	delete "${rootDir}/.aws-sam"
}

defaultTasks 'clean', 'spotlessApply', 'build'
