name: Package common CRI
on:
  push:
    branches:
      - main
  workflow_dispatch: # deploy manually

concurrency: post-merge-matrix-deploy

jobs:
  publish_common_cri_to_matrix_dev:
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        target: [ ADDRESS_DEV, FRAUD_DEV, KBV_DEV, DL_DEV, PASSPORTA_DEV, TOY_DEV ]
        include:
          - target: ADDRESS_DEV
            ENABLED: "${{ vars.ADDRESS_DEV_ENABLED }}"
            ARTIFACT_SOURCE_BUCKET_NAME_SECRET: ADDRESS_DEV_COMMON_CRI_ARTIFACT_SOURCE_BUCKET_NAME
            GH_ACTIONS_ROLE_ARN_SECRET: ADDRESS_DEV_COMMON_CRI_GH_ACTIONS_ROLE_ARN
            SIGNING_PROFILE_NAME: ADDRESS_DEV_SIGNING_PROFILE_NAME
          - target: FRAUD_DEV
            ENABLED: "${{ vars.FRAUD_DEV_ENABLED }}"
            ARTIFACT_SOURCE_BUCKET_NAME_SECRET: FRAUD_DEV_COMMON_CRI_ARTIFACT_SOURCE_BUCKET_NAME
            GH_ACTIONS_ROLE_ARN_SECRET: FRAUD_DEV_COMMON_CRI_GH_ACTIONS_ROLE_ARN
            SIGNING_PROFILE_NAME: FRAUD_DEV_SIGNING_PROFILE_NAME
          - target: KBV_DEV
            ENABLED: "${{ vars.KBV_DEV_ENABLED }}"
            ARTIFACT_SOURCE_BUCKET_NAME_SECRET: KBV_DEV_COMMON_CRI_ARTIFACT_SOURCE_BUCKET_NAME
            GH_ACTIONS_ROLE_ARN_SECRET: KBV_DEV_COMMON_CRI_GH_ACTIONS_ROLE_ARN
            SIGNING_PROFILE_NAME: KBV_DEV_SIGNING_PROFILE_NAME
          - target: DL_DEV
            ENABLED: "${{ vars.DL_DEV_ENABLED }}"
            ARTIFACT_SOURCE_BUCKET_NAME_SECRET: DL_DEV_COMMON_CRI_ARTIFACT_SOURCE_BUCKET_NAME
            GH_ACTIONS_ROLE_ARN_SECRET: DL_DEV_COMMON_CRI_GH_ACTIONS_ROLE_ARN
            SIGNING_PROFILE_NAME: DL_DEV_SIGNING_PROFILE_NAME
          - target: PASSPORTA_DEV
            ENABLED: "${{ vars.PASSPORTA_DEV_ENABLED }}"
            ARTIFACT_SOURCE_BUCKET_NAME_SECRET: PASSPORTA_DEV_COMMON_CRI_ARTIFACT_SOURCE_BUCKET_NAME
            GH_ACTIONS_ROLE_ARN_SECRET: PASSPORTA_DEV_COMMON_CRI_GH_ACTIONS_ROLE_ARN
            SIGNING_PROFILE_NAME: PASSPORTA_DEV_SIGNING_PROFILE_NAME
          - target: TOY_DEV
            ENABLED: "${{ vars.TOY_DEV_ENABLED }}"
            ARTIFACT_SOURCE_BUCKET_NAME_SECRET: TOY_DEV_COMMON_CRI_ARTIFACT_SOURCE_BUCKET_NAME
            GH_ACTIONS_ROLE_ARN_SECRET: TOY_DEV_COMMON_CRI_GH_ACTIONS_ROLE_ARN
            SIGNING_PROFILE_NAME: TOY_DEV_SIGNING_PROFILE_NAME
      max-parallel: 2
    name: Publish common_cri infrastructure to dev
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      AWS_REGION: eu-west-2
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        if: matrix.ENABLED == 'true'
        uses: actions/checkout@v3

      - name: Set up JDK 11
        if: matrix.ENABLED == 'true'
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: zulu

      - name: Setup Python
        if: matrix.ENABLED == 'true'
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.2

      - name: Setup Gradle
        if: matrix.ENABLED == 'true'
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.4.2

      - name: Setup SAM
        if: matrix.ENABLED == 'true'
        uses: aws-actions/setup-sam@v2
        with:
          version: 1.74.0

      - name: Assume temporary AWS role
        if: matrix.ENABLED == 'true'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets[matrix.GH_ACTIONS_ROLE_ARN_SECRET] }}
          aws-region: ${{ env.AWS_REGION }}

      - name: SAM Validate
        if: matrix.ENABLED == 'true'
        run: sam validate --region ${{ env.AWS_REGION }} -t infrastructure/lambda/template.yaml

      - name: Deploy SAM application
        if: matrix.ENABLED == 'true'
        uses: alphagov/di-devplatform-upload-action@v3.2
        with:
            artifact-bucket-name: ${{ secrets[matrix.ARTIFACT_SOURCE_BUCKET_NAME_SECRET] }}
            signing-profile-name: "${{ secrets[matrix.SIGNING_PROFILE_NAME] }}"
            working-directory: ./infrastructure/lambda


  publish_common_cri_to_matrix_build:
    if: ${{ always() }}
    needs: publish_common_cri_to_matrix_dev
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        target: [ ADDRESS_BUILD, FRAUD_BUILD, KBV_BUILD, DL_BUILD, PASSPORTA_BUILD, TOY_BUILD ]
        include:
          - target: ADDRESS_BUILD
            ENABLED: "${{ vars.ADDRESS_BUILD_ENABLED }}"
            ARTIFACT_SOURCE_BUCKET_NAME_SECRET: ADDRESS_BUILD_COMMON_CRI_ARTIFACT_SOURCE_BUCKET_NAME
            GH_ACTIONS_ROLE_ARN_SECRET:    ADDRESS_BUILD_COMMON_CRI_GH_ACTIONS_ROLE_ARN
            SIGNING_PROFILE_NAME: ADDRESS_BUILD_SIGNING_PROFILE_NAME
          - target: FRAUD_BUILD
            ENABLED: "${{ vars.FRAUD_BUILD_ENABLED }}"
            ARTIFACT_SOURCE_BUCKET_NAME_SECRET: FRAUD_BUILD_COMMON_CRI_ARTIFACT_SOURCE_BUCKET_NAME
            GH_ACTIONS_ROLE_ARN_SECRET:    FRAUD_BUILD_COMMON_CRI_GH_ACTIONS_ROLE_ARN
            SIGNING_PROFILE_NAME: FRAUD_BUILD_SIGNING_PROFILE_NAME
          - target: KBV_BUILD
            ENABLED: "${{ vars.KBV_BUILD_ENABLED }}"
            ARTIFACT_SOURCE_BUCKET_NAME_SECRET: KBV_BUILD_COMMON_CRI_ARTIFACT_SOURCE_BUCKET_NAME
            GH_ACTIONS_ROLE_ARN_SECRET:    KBV_BUILD_COMMON_CRI_GH_ACTIONS_ROLE_ARN
            SIGNING_PROFILE_NAME: KBV_BUILD_SIGNING_PROFILE_NAME
          - target: DL_BUILD
            ENABLED: "${{ vars.DL_BUILD_ENABLED }}"
            ARTIFACT_SOURCE_BUCKET_NAME_SECRET: DL_BUILD_COMMON_CRI_ARTIFACT_SOURCE_BUCKET_NAME
            GH_ACTIONS_ROLE_ARN_SECRET: DL_BUILD_COMMON_CRI_GH_ACTIONS_ROLE_ARN
            SIGNING_PROFILE_NAME: DL_BUILD_SIGNING_PROFILE_NAME
          - target: PASSPORTA_BUILD
            ENABLED: "${{ vars.PASSPORTA_BUILD_ENABLED }}"
            ARTIFACT_SOURCE_BUCKET_NAME_SECRET: PASSPORTA_BUILD_COMMON_CRI_ARTIFACT_SOURCE_BUCKET_NAME
            GH_ACTIONS_ROLE_ARN_SECRET:    PASSPORTA_BUILD_COMMON_CRI_GH_ACTIONS_ROLE_ARN
            SIGNING_PROFILE_NAME: PASSPORTA_BUILD_SIGNING_PROFILE_NAME
          - target: TOY_BUILD
            ENABLED: "${{ vars.TOY_BUILD_ENABLED }}"
            ARTIFACT_SOURCE_BUCKET_NAME_SECRET: TOY_BUILD_COMMON_CRI_ARTIFACT_SOURCE_BUCKET_NAME
            GH_ACTIONS_ROLE_ARN_SECRET: TOY_BUILD_COMMON_CRI_GH_ACTIONS_ROLE_ARN
            SIGNING_PROFILE_NAME: TOY_BUILD_SIGNING_PROFILE_NAME
      max-parallel: 2
    name: Publish common_cri infrastructure to build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      AWS_REGION: eu-west-2
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        if: matrix.ENABLED == 'true'
        uses: actions/checkout@v3

      - name: Set up JDK 11
        if: matrix.ENABLED == 'true'
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: zulu

      - name: Setup Python
        if: matrix.ENABLED == 'true'
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.2

      - name: Setup Gradle
        if: matrix.ENABLED == 'true'
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.4.2

      - name: Setup SAM
        if: matrix.ENABLED == 'true'
        uses: aws-actions/setup-sam@v2
        with:
          version: 1.74.0

      - name: Assume temporary AWS role
        if: matrix.ENABLED == 'true'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets[matrix.GH_ACTIONS_ROLE_ARN_SECRET] }}
          aws-region: ${{ env.AWS_REGION }}

      - name: SAM Validate
        if: matrix.ENABLED == 'true'
        run: sam validate --region ${{ env.AWS_REGION }} -t infrastructure/lambda/template.yaml

      - name: Deploy SAM application
        if: matrix.ENABLED == 'true'
        uses: alphagov/di-devplatform-upload-action@v3.2
        with:
            artifact-bucket-name: ${{ secrets[matrix.ARTIFACT_SOURCE_BUCKET_NAME_SECRET] }}
            signing-profile-name: "${{ secrets[matrix.SIGNING_PROFILE_NAME] }}"
            working-directory: ./infrastructure/lambda

