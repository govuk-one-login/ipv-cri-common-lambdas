name: "Package a SAM app and upload to S3 for secure pipeline deployment in multiple AWS accounts"

on:
  workflow_call:
    inputs:
      cris: {required: true, type: string}
      environment: {required: true, type: string}

jobs:
  #  config:
  #    name: Config
  #    runs-on: ubuntu-latest
  #    environment: ${{ inputs.environment }}
  #    outputs:
  #      cris: ${{ steps.parse-cris.outputs.json }}
  #    steps:
  #      - name: Parse CRIs
  #        id: parse-cris
  #        uses: govuk-one-login/github-actions/utils/json/parse-array@oj-2738-test-harness-actions
  #        with:
  #          array: ${{ inputs.cris }}
  #
  #      - name: Print CRIs
  #        shell: bash
  #        env:
  #          CRIS: ${{ steps.parse-cris.outputs.json }}
  #        run: echo "$CRIS" | tee "$GITHUB_STEP_SUMMARY"

  config:
    name: Config
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    outputs:
      cris-json: ${{ steps.cris.outputs.array-json }}
      badges: ${{ steps.badges.outputs.mapped-dictionary }}
    steps:
      - name: Pull repository
        uses: actions/checkout@v4

      - name: Parse CRIs
        id: cris
        uses: govuk-one-login/github-actions/utils/json/parse-array@oj-2738-test-harness-actions
        with:
          array: ${{ inputs.cris }}

      - name: Get badges
        id: badges
        uses: ./.github/actions/map-dictionary
        with:
          dictionary: ${{ toJSON(vars) }}
          key-filter: ^(${{ join(fromJSON(steps.cris.outputs.array-json), '|') }})_ENABLED$
          key-transform: ^(.*)_ENABLED$
          value-map: true=ðŸš€ | false=âœ‹

      - name: Print badges
        shell: bash
        env:
          PRINT: ${{ steps.badges.outputs.mapped-dictionary }}
        run: echo "$PRINT"

  publish:
    needs: config
    name: ${{ fromJSON(needs.config.outputs.badges)[matrix.cri] }} Publish to ${{ matrix.name }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    strategy:
      fail-fast: false
      matrix:
        cri: ${{ fromJSON(needs.config.outputs.cris-json) }}
        include:
          - {cri: ADDRESS, name: Address}
          - {cri: CHECK_HMRC, name: "Check HMRC"}
    steps:
      - name: Print
        shell: bash
        run: echo
