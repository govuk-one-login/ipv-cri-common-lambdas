name: "Package a SAM app and upload to S3 for secure pipeline deployment in multiple AWS accounts"

on:
  workflow_call:
    inputs:
      cris: {required: true, type: string}
      environment: {required: true, type: string}

permissions: {}

jobs:
  config:
    name: Get config
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    if: ${{ github.ref_name == 'main' || endsWith(inputs.environment, 'dev') }}
    outputs:
      cris-json: ${{ steps.cris.outputs.array-json }}
      badges: ${{ steps.badges.outputs.mapped-dictionary }}
    steps:
      - name: Parse CRI names
        id: cris
        uses: govuk-one-login/github-actions/utils/json/parse-array@oj-2738-test-harness-actions
        with:
          array: ${{ inputs.cris }}

      - name: Get badges
        id: badges
        uses: govuk-one-login/github-actions/utils/json/map-dictionary@oj-2738-test-harness-actions
        with:
          dictionary: ${{ toJSON(vars) }}
          key-filter: ^(${{ join(fromJSON(steps.cris.outputs.array-json), '|') }})_ENABLED$
          key-transform: ^(.*)_ENABLED$
          value-map: true=ðŸš€ | false=âœ‹

  publish:
    needs: config
    #    name: ${{ fromJSON(needs.config.outputs.badges)[matrix.cri] }} Upload to ${{ matrix.name }}
    name: Upload to ${{ matrix.name }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    concurrency:
      group: publish-${{ github.workflow }}-${{ matrix.environment }}
      cancel-in-progress: false
    permissions:
      id-token: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        cri: ${{ fromJSON(needs.config.outputs.cris-json) }}
        include:
          - {cri: ADDRESS, name: Address}
          - {cri: CHECK_HMRC, name: "Check HMRC"}
    steps:
      #      - name: Check deployment enabled
      #        id: enabled
      #        if: ${{
      #          (github.ref_name == 'main' || matrix.environment == 'dev') &&
      #          vars[format('{0}_ENABLED', matrix.cri)] == 'true'
      #          }}
      #        shell: bash
      #        run: exit 0

      - name: Pull repository
        if: ${{ steps.enabled.outcome == 'success' }}
        uses: actions/checkout@v4
